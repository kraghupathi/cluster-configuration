
#+PROPERTY: session *scratch*
#+PROPERTY: results output
#+PROPERTY: tangle ../build/roles/redmine/tasks/main.yml
#+PROPERTY: exports code

Explain whatever in org mode style..

#+BEGIN_SRC YAML
---
  - name: Create redmine user
    user: name=redmine password={{ redmine_user_password_hash }}

  - name: Download redmine sources
    get_url: url="{{ redmine_download_url }}"  dest="{{ redmine_home_folder }}redmine-2.6.2.tar.gz" force=no sha256sum="{{ redmine_download_url_file_sha256_sum }}" timeout=5
    environment: proxy_env

  - name: Extract redmine downloaded sources in /home/redmine
    unarchive: copy=no src="{{ redmine_home_folder }}"/redmine-2.6.2.tar.gz dest="{{ redmine_home_folder }}" creates=/home/redmine/redmine-2.6.2/config.ru

  - name: Download epel RPM
    get_url: url="{{ epel_download_url }}" dest=/root timeout=5
    environment: proxy_env
 
  - name: Install epel RPM
    yum: name=/root/epel-release-6-8.noarch.rpm state=present

  - name: Install mysql-server, MySQL-python, ruby, rubygems, ImageMagick, ruby-devel, gcc, ruby-RMagick, ImageMagick-devel, mysql-devel
    yum: name={{ item }} state=present
    environment: proxy_env
    with_items:
      - mysql-server
      - MySQL-python   #Required for mysql_db etc. ansible modules used below
      - ruby           #Required for ruby which redmine uses
      - rubygems       #Required for installing ruby packages esp bundler
      - ImageMagick    #Required for image manipulation,  This is used by redmine
      - ruby-devel     #For compiling various ruby modules through bundler
      - gcc             
      - ruby-RMagick 
      - ImageMagick-devel   #Without this devel packages ruby modules will not compile due to absense of header files
      - mysql-devel         

  - name: Start and Enable mysqld
    service: name={{ item }} state=started enabled=yes
    with_items:
      - mysqld

  - name: Create redmine database in mysql
    mysql_db: name=redmine
  
  - name: Create redmine user and give all permissions on redmine database
    mysql_user: name=redmine password="{{ mysql_redmine_password }}" priv=redmine.*:ALL

  - name: Copy database.yml file to config folder
    copy: src=database.yml dest="{{ redmine_home_folder }}redmine-2.6.2/config" owner=redmine group=redmine
  
  - name: Install bundler using rubygems
    gem: name=bundler state=present user_install=no
    environment: proxy_env

  - name: Ask bundler to install all redmine dependencies
    shell: bundle install --without development test postgresql sqlite
    environment: proxy_env
    args:
      chdir: "{{ redmine_home_folder }}redmine-2.6.2/"
#      creates: /home/redmine/redmine-2.6.2/Rakefile 

  - name: Generate new key for encoding session data
    shell: rake generate_secret_token
    args:
      chdir: "{{ redmine_home_folder }}redmine-2.6.2/"
#      creates: /home/redmine/redmine-2.6.2/Rakefile

  - name: Create database schema objects
    shell: RAILS_ENV=production rake db:migrate
    args:
      chdir: "{{ redmine_home_folder }}redmine-2.6.2/"
#      creates: /home/redmine/redmine-2.6.2/Rakefile

  - name: Insert default configuration data in database
    shell: RAILS_ENV=production REDMINE_LANG=en rake redmine:load_default_data
    args:
      chdir: "{{ redmine_home_folder }}redmine-2.6.2/"

  - name: Ensure all redmine user files are owned by redmine user
    file: dest="{{ redmine_home_folder }}" owner=redmine group=redmine recurse=yes

  - name: Create necessary folders for redmine to work
    file: path="{{ redmine_home_folder }}{{ item }}" state=directory owner=redmine group=redmine mode=755
    with_items:
      - files
      - log
      - tmp/pdf
      - public/plugin_assets

  - name: Configure redmine to start on machine start
    lineinfile: dest=/etc/rc.d/rc.local line="runuser -l redmine -c 'cd /home/redmine/redmine-2.6.2; ruby script/rails server webrick -e production -d >run.log 2>&1 &'" 
    notify:
      - start redmine

  - name: Print web instructions
    debug: msg="Please visit http://{{ ansible_default_ipv4.address }}:3000 and login using admin:admin credentials"


#+END_SRC
