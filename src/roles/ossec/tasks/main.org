
#+PROPERTY: session *scratch*
#+PROPERTY: results output
#+PROPERTY: tangle ../build/roles/ossec/tasks/main.yml
#+PROPERTY: exports code

Explain whatever in org mode style..

#+BEGIN_SRC YAML
---
  - name: Install necessary packages - gcc, postgresql-devel, mysql-devel, php and expect
    yum: name="{{item}}" state=present
    environment: proxy_env
    with_items:
      - gcc
      - postgresql-devel
      - mysql-devel
      - php
      - expect
      - httpd
    notify:
      - restart apache

  - name: Download Ossec server/agent 
    get_url: url="{{ossec_url}}" dest="{{ossec_path}}".tar.gz
    environment: proxy_env

  - name: Extract Ossec server code
    unarchive: copy=no src="{{ossec_path}}".tar.gz dest="{{extract_path}}" creates="{{ossec_path}}"

  - name: Copy the Ossec_input file
    template: src=ossec_server_input.j2 dest="{{ossec_path}}/ossec_server_input.txt"

  - name: Install Ossec server
    shell: ./install.sh < ossec_server_input.txt
    args:
      chdir: "{{ossec_path}}"
      creates: /var/ossec/etc/ossec.conf

  - name: Start ossec server
    service: name=ossec state=started

  - name: Download Ossec web UI
    get_url: url="{{webui_url}}" dest="{{webui_path}}".tar.gz
    environment: proxy_env
  
  - name: Extract Ossec web UI code
    unarchive: copy=no src="{{webui_path}}".tar.gz dest="{{extract_path}}" creates="{{webui_install_path}}" 

  - name: Move the extracted web UI code to document root
    command: mv "{{webui_path}}" "{{webui_install_path}}"
    args:
      creates: "{{webui_install_path}}"

  - name: Copy the Ossec_webui_input file
    copy: src=ossec_webui_setup.sh dest="{{webui_install_path}}" mode=544

  - name: Install Ossec web UI
    shell: ./ossec_webui_setup.sh 
    args:
      chdir: /var/www/html/ossec
      creates: /var/www/html/ossec/.htpasswd

  - name: Create index.html to automatically redirect to /ossec
    copy: src=index.html dest="{{document_root}}" owner=root group=root mode=644
    notify:
      - restart ossec
      
  - name: Ensure that apache service is running
    service: name=httpd state=started

  - name: Copy add_agent.sh script
    copy: src=add_agent.sh dest=/root/add_agent.sh mode=755 owner=root group=root

  - name: Add agent to the server
    shell: /root/add_agent.sh "{{item}}"
    with_items: client_ips
    notify: 
    - restart ossec
  
  - name: Get all client keys from OSSEC server to ansible server
    fetch: src=/var/ossec/etc/client.keys dest=fetched 
#+END_SRC
