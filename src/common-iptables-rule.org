#+TITLE: Description of common firewall rules 
#+DATE: 2015-03-26 March
#+PROPERTY: session *scratch*
#+PROPERTY: results output
#+PROPERTY: exports code
#+SETUPFILE: org-templates/level-0.org
#+DESCRIPTION: Description of firewall rules applied across all the server

* Introduction
This document describes the firewall rules which are applied in every server.


* Firewall Rules
*** Default rules for filter table
- Default policy for input, forward and output is set to be as ACCEPT. If packet
  does not match any rule then the default action is applied to the packet.
  Packets counters are set to [0:0].  First counter represents the number of
  packets that matched the rule for the chain, and second counter represents the
  total size of the packets that matched the rule.
  
#+BEGIN_EXAMPLE
#If packet does not match any rule then the default action is applied to the packet
*filter
:INPUT ACCEPT [0:0]
:FORWARD ACCEPT [0:0]
:OUTPUT ACCEPT [0:0]
#+END_EXAMPLE 

*** Rule for INPUT loopback packets
- Allow internal communication between services running within the rsyslog
  server, over loopback interface. Destination ip is also specified to avoid any
  security breach.
#+BEGIN_EXAMPLE
#Allow internal process to process communication over loopback interface
-A INPUT -i lo -d 127.0.0.0/8 -j ACCEPT
#+END_EXAMPLE
 
*** Rate limiting new connections
#+BEGIN_EXAMPLE
#Rate limit new connections to 20 new connections per 30 seconds
-A INPUT ! -p udp -m state --state NEW -m recent --name new_limit --set
-A INPUT ! -p udp -m state --state NEW -m recent --name new_limit --rcheck --seconds 30 --hitcount 20 -m limit --limit 2/min -j LOG --log-prefix "new_limit_"
-A INPUT ! -p udp -m state --state NEW -m recent --name ssh_limit --rcheck --seconds 30 --hitcount 20 -j DROP
#+END_EXAMPLE

*** Rule for incoming ping request with rate limiting
- Allow rsyslog server to accept incoming ping requests from anywhere.
#+BEGIN_EXAMPLE
#Allow to accept incoming ping requests from anywhere
-A INPUT -p icmp --icmp-type echo-request -m limit --limit 60/minute --limit-burst 120 -j ACCEPT
-A INPUT -p icmp --icmp-type echo-request -m limit --limit 1/minute --limit-burst 2 -j LOG 
-A INPUT -p icmp --icmp-type echo-request -j DROP
#+END_EXAMPLE

*** Rule for ongoing connection to other machine
- Allow rsyslog server to continue already related and established
  connections. Previous connection would have passed through the firewall and if
  they got established, connection is allowed to continue.
#+BEGIN_EXAMPLE
#Allow to continue already related and established connections
-A INPUT -m state --state RELATED,ESTABLISHED -j ACCEPT
#+END_EXAMPLE

*** Rule for incoming ssh connection
- Allowing rsyslog server to accept incoming ssh TCP port 22 connections *only*
  from the ansible and nagios. For loop is used to enable rule for multiple
  management server and ansible server.
#+BEGIN_EXAMPLE
#Allowing incoming ssh connections only from the management ips. Hopefully fail2ban will take care of bruteforce attacks from management IPs
{% for item in management_ips  %}  
-A INPUT -m state --state NEW -s {{ item }} -p tcp -m tcp --dport 22 -j ACCEPT
{% endfor %}
#Allowing incoming ssh connections only from ansible server. Hopefully fail2ban will take care of bruteforce attacks from ansible server IPs
{% for item in ansible_server_ips  %}
-A INPUT -m state --state NEW -s {{ item }} -p tcp -m tcp --dport 22 -j ACCEPT
{% endfor %}
#+END_EXAMPLE

*** Rule for incoming connection for rsyslog messages
- Allowing rsyslog server to accept incoming packets on udp port 514 from
  anywhere.
#+BEGIN_EXAMPLE
#Allow to accept incoming rsyslog messages from anywhere
-A INPUT -m state --state NEW -p udp -m udp --dport 514 -j ACCEPT
#+END_EXAMPLE

*** Rule for incoming NRPE query from Nagios server
#+BEGIN_EXAMPLE
#Allow to accept incoming nrpe queries from nagios server
-A INPUT -m state --state NEW -p tcp -m tcp --dport 5666 -j ACCEPT
#+END_EXAMPLE

*** Rule for incoming SNMP queries from Cacti server
#+BEGIN_EXAMPLE
#Allow to accept incoming snmp queries from cacti server
-A INPUT -p udp -m udp --dport 161 -j ACCEPT
-A INPUT -p udp -m udp --dport 162 -j ACCEPT
#+END_EXAMPLE

*** Rule for logging blocked incoming connection
#+BEGIN_EXAMPLE
#Log all other "blocked_input_" attempts with rate limiting
-A INPUT -m state --state NEW -m limit --limit 2/min -j LOG --log-prefix "blocked_input_"
#+END_EXAMPLE
*** Rule for all other incoming packets
- Reject all the INPUT packets which does not match any of the defined
  rules. Also send a reply message to the host machine.
#+BEGIN_EXAMPLE
#Drop all the INPUT packets which does not match any of the rules
-A INPUT -j REJECT --reject-with icmp-host-prohibited
#+END_EXAMPLE

*** Rule for FORWARD chain
- Rsyslog is not responsible for any packet forwarding and hence forwarding rule
  should be set to reject packets.
#+BEGIN_EXAMPLE
#Do not allow any packet to be forwarded
-A FORWARD -j REJECT --reject-with icmp-host-prohibited
#+END_EXAMPLE

*** Rule for OUTPUT loopback packets
- Allow internal communication between services running within the system, over
  loopback interface. Source ip is also specified to avoid any security breach.
#+BEGIN_EXAMPLE
#Allow internal process to process communication over loopback interface
-A OUTPUT -s 127.0.0.0/8 -o lo -j ACCEPT
#+END_EXAMPLE

*** Rule for ongoing connection from other machine
- Allow rsyslog server to continue already related and established
  connections. Previous connection must have passed through the firewall and if
  they got established, connection is allowed to continue.
#+BEGIN_EXAMPLE
#Allow to continue already related and established connections
-A OUTPUT -m state --state RELATED,ESTABLISHED -j ACCEPT
#+END_EXAMPLE

*** Rule for outgoing dns request
- Allow rsyslog server to make dns queries.
#+BEGIN_EXAMPLE
#Allow to make dns queries
-A OUTPUT -p udp -m udp --dport 53 -j ACCEPT
#+END_EXAMPLE

*** Rule for sending mails by logwatch service
#+BEGIN_EXAMPLE
#Allow to send mails by logwatch service
-A OUTPUT -p tcp -m tcp --dport 25 -j ACCEPT
#+END_EXAMPLE

*** Rule for outgoing web request by yum
#+BEGIN_EXAMPLE
#Allow yum to contact web servers for installing and updating packages
-A OUTPUT -p tcp -m tcp --dport 80 -j ACCEPT
-A OUTPUT -p tcp -m tcp --dport 443 -j ACCEPT
#+END_EXAMPLE

*** Rule for outgoing connection to OSSEC server
#+BEGIN_EXAMPLE
#Allow outgoing connections to OSSEC server
-A OUTPUT -p udp -m udp --dport 1514 -j ACCEPT
#+END_EXAMPLE
    
*** Rule for outgoing ping request
- Allow rsyslog server to send ping requests to anywhere.
#+BEGIN_EXAMPLE
#Allow to send ping requests to anywhere.
-A OUTPUT -p icmp --icmp-type echo-request -j ACCEPT
#+END_EXAMPLE

*** Rule for logging blocked outgoing connection
#+BEGIN_EXAMPLE
#Log all other "blocked_output_" attempts
-A OUTPUT -m state --state NEW -m limit --limit 2/min -j LOG --log-prefix "blocked_output_"
#+END_EXAMPLE
*** Rule for all other outgoing packets
- Reject all the OUTPUT packets which does not match any of the defined rules.
  Also send a reply message to the host machine.
#+BEGIN_EXAMPLE
#Reject all the OUTPUT packets which does not match any of the rules
-A OUTPUT -j REJECT --reject-with icmp-host-prohibited
#+END_EXAMPLE

*** Enforce filter rules
#+BEGIN_EXAMPLE
COMMIT
#+END_EXAMPLE
    
